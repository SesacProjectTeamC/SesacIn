<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <%- include('./components/cdn', { title: 'SesacIn 자유게시글 상세' }) %>
    <link rel="stylesheet" href="/views/styles/globalstyle.css" />
    <link rel="stylesheet" href="/views/styles/boardDetail.css" />
    <script defer src="../static/js/boardDetail.js"></script>
  </head>
  <body class="container">
    <%- include('./components/header') %>
    <div id="bWrapper">
      <div id="bTitle"><%= boardData.title %></div>

      <div id="bUserC">
        <div style="display: flex; align-items: center">
          <div id="bUser">
            <img src="../../static/svg/person.svg" alt="프로필" width="36px" />
            <%= boardData.uId %>
          </div>
          |
          <div class="viewImg">
            <img
              src="../../static/svg/heart.svg"
              alt="좋아요수"
              width="24px"
              class="svg"
            />
            <%= boardData.likeCount%>
          </div>
          <div class="viewImg">
            <img
              src="../../static/svg/eye.svg"
              alt="조회수"
              width="24px"
              class="svg"
            />
            <%= boardData.viewCount%>
          </div>
        </div>
        <div id="bTime"><%= boardData.createdAt %></div>
      </div>

      <div class="bContent"><%- boardData.content %></div>

      <div id="bCommentCount">댓글 <%= commentData.length%></div>
    </div>

    <h1>자유게시판 개별 게시글 페이지</h1>
    <a href="/board/create">새 게시글 작성페이지로 이동</a>
    <hr />
    <div>게시글 섹션</div>
    <a href=/board/edit/<%= boardData.bId %>>수정하기</a>
    /
    <button type="button" onclick="deleteThisBoard()">삭제하기</button>
    <hr />
    <form id="boardInfoForm">
      <!-- 숨겨진 input 요소로 bId 저장 -->
      <input type="hidden" id="bId" name="bId" value="<%= boardData.bId %>" />
      <div>
        <label for="title">1. 게시글 제목:</label>
        <input
          type="text"
          id="title"
          name="title"
          value="<%= boardData.title %>"
        />
      </div>
      <div>
        <label for="content">2. 게시글 내용:</label>
        <textarea id="content" name="content">
<%= boardData.content %></textarea
        >
      </div>
      <div>
        <label for="viewCount">3. 조회수:</label>
        <input
          type="number"
          id="viewCount"
          name="viewCount"
          value="<%= boardData.viewCount %>"
        />
      </div>
      <div>
        <label for="likeCount">4. 좋아요:</label>
        <input
          type="number"
          id="likeCount"
          name="likeCount"
          value="<%= boardData.likeCount %>"
        />
      </div>
      <div>
        <label for="createdAt">5. 생성일:</label>
        <input
          type="text"
          id="createdAt"
          name="createdAt"
          value="<%= boardData.createdAt %>"
          disabled
        />
      </div>
      <div>
        <label for="updatedAt">6. 수정일:</label>
        <input
          type="text"
          id="updatedAt"
          name="updatedAt"
          value="<%= boardData.updatedAt %>"
          disabled
        />
      </div>
      <div>
        <label for="uId">7. 작성자:</label>
        <input
          type="text"
          id="uId"
          name="uId"
          value="<%= boardData.uId %>"
          disabled
        />
      </div>
    </form>
    <hr />
    <form id="inputCommentForm">
      <div>
        <label for="commentContent">댓글내용:</label>
        <input type="text" id="commentContent" name="commentContent" />
      </div>
    </form>
    <button type="button" onclick="addComment()">댓글 달기</button>
    <hr />

    <div>자유게시판 댓글 섹션</div>
    <div id="commentsContainer">
      <% for (let i = 0; i < commentData.length; i++) { %>
      <!-- 댓글 목록 표시 -->
      <div>
        <%= commentData[i].cId %>. 댓글 작성자: <%= commentData[i].uId %>
        <button
          type="button"
          onclick="editComment('<%= commentData[i].cId %>')"
        >
          수정하기
        </button>
        <button
          type="button"
          onclick="deleteComment('<%= commentData[i].cId %>')"
        >
          삭제하기
        </button>
      </div>
      <div id="comment<%= commentData[i].cId %>">
        <%= commentData[i].cId %>. 댓글 내용: <%= commentData[i].content %>
      </div>
      <div id="editComment<%= commentData[i].cId %>" style="display: none">
        <input
          type="text"
          id="editedComment<%= commentData[i].cId %>"
          value="<%= commentData[i].content %>"
        />
        <button type="button" onclick="applyEdit('<%= commentData[i].cId %>')">
          적용
        </button>
        <button type="button" onclick="cancelEdit('<%= commentData[i].cId %>')">
          취소
        </button>
      </div>
      <% } %>
    </div>
  </body>
  <script>
    function addComment() {
      const board = document.forms["boardInfoForm"];
      const comment = document.forms["inputCommentForm"];

      axios({
        method: "post",
        url: `/board/comment/create/${board.bId.value}`, //bId가 params로 넘어갑니다.
        data: {
          bId: board.bId.value,
          content: comment.commentContent.value,
        },
      })
        .then((response) => {
          // 성공했을때 처리.
          // response.status에 의해서 판단한다.
          console.log(response.data);

          // 새로운 댓글 엘리먼트 생성 및 추가
          const commentsContainer =
            document.getElementById("commentsContainer");
          const newComment = response.data.commentData; // 새로운 댓글 데이터

          const commentDiv = document.createElement("div");
          commentDiv.innerHTML = `
        ${newComment.cId}. 댓글 작성자: ${newComment.uId}
        <button
          type="button"
          onclick="editComment('${newComment.cId}')"
        >
          수정하기
        </button>
        <button
          type="button"
          onclick="deleteComment('${newComment.cId}')"
        >
          삭제하기
        </button>
      </div>
      <div id="comment${newComment.cId}">
        ${newComment.cId}. 댓글 내용: ${newComment.content}
      </div>
      <div id="editComment${newComment.cId}" style="display: none">
        <input
          type="text"
          id="editedComment${newComment.cId}"
          value="${newComment.cId}"
        />
        <button
          type="button"
          onclick="applyEdit('${newComment.cId}')"
        >
          적용
        </button>
        <button type="button" onclick="cancelEdit('${newComment.cId}')">취소</button>
      </div>`;

          commentsContainer.appendChild(commentDiv);
        })
        .catch((error) => {
          // 실패했을때 처리
          // response.status에 의해서 판단되어 catch 문에서 실행된다.

          // 에러 객체 전체
          console.log(error);
        });
    }

    let editingCommentcId = null;

    // 현재화면에서 댓글 수정하기 눌렀을때 수정하는 칸 나오기
    function editComment(cId) {
      if (editingCommentcId !== null) {
        cancelEdit(editingCommentcId);
      }

      const commentDiv = document.getElementById(`comment${cId}`);
      const editDiv = document.getElementById(`editComment${cId}`);

      commentDiv.style.display = "none";
      editDiv.style.display = "block";

      const editedComment = document.getElementById(`editedComment${cId}`);
      editedComment.focus();
      editedComment.select();

      editingCommentcId = cId;
    }

    // 댓글 수정하는 칸에서 적용 버튼 눌렀을때 실제 댓글 수정 처리
    function applyEdit(cId) {
      const editedComment = document.getElementById(
        `editedComment${cId}`
      ).value;
      const commentDiv = document.getElementById(`comment${cId}`);
      const editDiv = document.getElementById(`editComment${cId}`);

      // 서버로 수정 요청을 보내고, 성공하면 수정된 내용으로 업데이트
      axios({
        method: "patch",
        url: `/board/comment/edit/${cId}`,
        data: {
          content: editedComment,
        },
      })
        .then((response) => {
          console.log(response.data);
          // commentData[index].content = editedComment; // 클라이언트 데이터 업데이트
          commentDiv.innerHTML = `${cId}. 댓글 내용: ${editedComment}`;
          commentDiv.style.display = "block";
          editDiv.style.display = "none";
          editingCommentIndex = null;
        })
        .catch((error) => {
          console.log(error);
        });
    }

    // 댓글 수정하는 칸에 적은 글들 지우그
    function cancelEdit(cId) {
      const commentDiv = document.getElementById(`comment${cId}`);
      const editDiv = document.getElementById(`editComment${cId}`);
      commentDiv.style.display = "block";
      editDiv.style.display = "none";
      editingCommentIndex = null;
    }

    // 현재 페이지에 댓글 삭제하기
    function deleteComment(cId) {
      // 댓글 삭제 요청을 서버로 보내고, 성공하면 화면에서 삭제
      axios({
        method: "delete",
        url: `/board/comment/delete/${cId}`,
      })
        .then((response) => {
          console.log(response.data);
          refreshComments(); // 댓글 목록 업데이트
        })
        .catch((error) => {
          console.error(error.message);
          console.error(error.response.data.msg);
        });
    }

    // 댓글 목록을 다시 불러와서 화면 업데이트
    async function refreshComments() {
      const result = await axios({
        method: "get",
        url: "/board/comment/list/<%= boardData.bId %>", // 서버에서 댓글 데이터를 가져오는 API 엔드포인트
      });
      // 현재 모든 댓글 데이터 저장
      let commentData = result.data.comment;

      const commentsContainer = document.getElementById("commentsContainer");
      commentsContainer.innerHTML = ""; // 기존 댓글 삭제

      commentData.forEach((comment) => {
        const commentDiv = document.createElement("div");
        commentDiv.innerHTML = `
      ${comment.cId}. 댓글 작성자: ${comment.uId}
      <button type="button" onclick="editComment('${comment.cId}')">수정하기</button>
      <button type="button" onclick="deleteComment('${comment.cId}')">삭제하기</button>
      <div id="comment${comment.cId}">
        ${comment.cId}. 댓글 내용: ${comment.content}
      </div>
      <div id="editComment${comment.cId}" style="display: none;">
        <input type="text" id="editedComment${comment.cId}" value="${comment.content}">
        <button type="button" onclick="applyEdit('${comment.cId}')">적용</button>
        <button type="button" onclick="cancelEdit('${comment.cId}')">취소</button>
      </div>`;
        commentsContainer.appendChild(commentDiv);
      });
    }

  </script>
</html>
