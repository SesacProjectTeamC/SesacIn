<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="views/componets/cdn.ejs" />
    <link rel="stylesheet" href="/views/styles/editProfile.css" />
    <link rel="stylesheet" href="/views/styles/globalstyle.css" />
    <link rel="icon" href="/static/img/favicon.ico" type="image/x-icon" />
  </head>
  <body>
    <header>
      <div>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="30"
          height="30"
          viewBox="0 0 20 20"
          class="bi-arrow-left"
          onclick="goBack()"
        >
          <circle
            cx="10"
            cy="10"
            r="9.5"
            fill="transparent"
            class="hover-circle"
          />
          <path
            fill="black"
            fill-rule="evenodd"
            transform="translate(2, 2)"
            d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"
          />
        </svg>
      </div>
    </header>
    <div class="content">
      <img src="/static/img/logo.png" alt="logo" class="logo" />
      <main>
        <form class="form_profile" name="form_profile">
          <h2>회원 정보 수정</h2>
          <br />
          <div class="input-wrapper">
            <label class="uId">아이디</label><br />
            <label class="userId"> <%= userData.uId %></label><br />
          </div>
          <div class="input-wrapper2">
            <label for="uName" class="uName">닉네임</label>
            <input
              id="uName"
              type="text"
              name="uName"
              pattern="^[a-zA-Z0-9가-힣]{2,12}$"
              required
              placeholder="변경하지 않는다면 넘겨주세요."
              oninput="checkNameFormat()"
            />
          </div>
          <div
            id="nameErrorMessage"
            class="alert alert-danger"
            style="display: none"
          ></div>

          <div class="input-wrapper2">
            <label for="email" class="email">이메일</label>
            <input
              id="email"
              type="text"
              name="email"
              pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}"
              placeholder="변경하지 않는다면 넘겨주세요."
            />
          </div>
          <div
            id="emailErrorMessage"
            class="alert alert-danger"
            style="display: none"
          ></div>

          <div class="input-wrapper2">
            <label for="pw" class="pw">비밀번호</label>
            <input
              id="pw"
              type="password"
              name="pw"
              pattern="^(?=.*[\W_])[A-Za-z\d\W_]{6,}$"
              required
              oninput="checkPwFormat()"
            />
          </div>
          <div
            id="pwErrorMessage"
            class="alert alert-danger"
            style="display: none"
          ></div>

          <div class="input-wrapper2">
            <label for="pw_check">비밀번호확인</label>
            <input
              id="pwCheck"
              type="password"
              name="pwCheck"
              pattern="^(?=.*[\W_])[A-Za-z\d\W_]{6,}$"
              required
            />
          </div>
          <div
            id="pwCheckErrorMessage"
            class="alert alert-danger"
            style="display: none"
          ></div>

          <button
            type="button"
            class="profileEdit"
            onclick="profileEdit();"
            disabled
          >
            수정하기</button
          ><br />

          <button
            type="button"
            class="profileDelete"
            onclick="openDeleteModal();"
          >
            회원탈퇴
          </button>
        </form>

        <div
          class="modal fade"
          id="cautionModal"
          tabindex="-1"
          aria-labelledby="cautionModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="cautionModalLabel">경고</h5>
                <button
                  type="button"
                  class="close"
                  data-dismiss="modal"
                  aria-label="Close"
                >
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <p id="cautionText"></p>
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-dismiss="modal"
                >
                  닫기
                </button>
              </div>
            </div>
          </div>
        </div>

        <div
          class="modal fade"
          id="confirmDeleteModal"
          tabindex="-1"
          aria-labelledby="confirmDeleteModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">
                  회원 탈퇴
                </h5>
                <button
                  type="button"
                  class="close"
                  data-dismiss="modal"
                  aria-label="Close"
                >
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <p>회원 탈퇴를 진행하려면 비밀번호를 입력하세요:</p>
                <input
                  id="deletePassword"
                  type="password"
                  class="form-control"
                  placeholder="비밀번호"
                />
              </div>
              <br />

              <div
                id="pwModalMessage"
                class="alert alert-danger"
                style="display: none"
              ></div>
              <br />

              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-dismiss="modal"
                >
                  취소
                </button>
                <button
                  type="button"
                  class="btn btn-danger"
                  id="deletebtn"
                  onclick="confirmDelete()"
                >
                  탈퇴
                </button>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
    <script>
      const pwInput = document.getElementById('pw');
      const pwCheckInput = document.getElementById('pwCheck');
      const pwCheckErrorMessage = document.getElementById(
        'pwCheckErrorMessage'
      );
      const uNameInput = document.getElementById('uName');
      const emailInput = document.getElementById('email');

      const editButton = document.querySelector('.profileEdit');

      function checkNameFormat() {
        const nameInput = document.getElementById('uName');
        const nameErrorMessage = document.getElementById('nameErrorMessage');

        if (!nameInput.validity.valid) {
          const errorMessage =
            '한글, 영문, 숫자로 2자 이상 12자 이하로 구성되어야 합니다.';
          nameErrorMessage.textContent = errorMessage;
          nameErrorMessage.style.display = 'block';
        } else {
          nameErrorMessage.style.display = 'none';
        }
      }
      function checkEmailFormat() {
        const emailInput = document.getElementById('email');
        const emailErrorMessage = document.getElementById('emailErrorMessage');

        if (!emailInput.validity.valid) {
          const errorMessage = '올바른 이메일 형식을 입력해주세요.';
          emailErrorMessage.textContent = errorMessage;
          emailErrorMessage.style.display = 'block';
        } else {
          emailErrorMessage.style.display = 'none';
        }
      }
      function checkPwFormat() {
        const pwInput = document.getElementById('pw');
        const pwErrorMessage = document.getElementById('pwErrorMessage');

        if (!pwInput.validity.valid) {
          const errorMessage =
            '비밀번호는 특수문자를 포함하여 6자 이상이어야 합니다.';
          pwErrorMessage.textContent = errorMessage;
          pwErrorMessage.style.display = 'block';
        } else {
          pwErrorMessage.style.display = 'none';
        }
      }
      // 비밀번호 일치 여부
      function checkPasswordMatch() {
        if (pwInput.value !== pwCheckInput.value) {
          pwCheckErrorMessage.textContent = '비밀번호가 일치하지 않습니다.';
          pwCheckErrorMessage.style.display = 'block';
          editButton.disabled = true;
        } else {
          pwCheckErrorMessage.style.display = 'none';
          editButton.disabled = false;
        }
      }
      pwCheckInput.addEventListener('input', checkPasswordMatch);

      // input 유효성 검사
      function validateForm() {
        const pwValid = pwInput.validity.valid;
        const pwCheckValid = pwCheckInput.validity.valid;

        const uNameValid =
          uNameInput.value.trim() === '' || uNameInput.validity.valid;
        const emailValid =
          emailInput.value.trim() === '' || emailInput.validity.valid;

        // 모든 필드가 유효한 경우 수정 버튼 활성화
        if (pwValid && pwCheckValid && uNameValid && emailValid) {
          editButton.disabled = false;
        } else {
          editButton.disabled = true;
        }
      }
      uNameInput.addEventListener('input', validateForm);
      emailInput.addEventListener('input', validateForm);
      pwCheckInput.addEventListener('input', validateForm);
      validateForm();

      function profileEdit() {
        const form_profile = document.forms['form_profile'];

        axios({
          method: 'PATCH',
          url: `/users/editprofile`,
          data: {
            email: form_profile.email.value,
            pw: form_profile.pw.value,
            uName: form_profile.uName.value,
          },
        })
          .then((result) => {
            axios({
              method: 'GET',
              url: '/users/profile',
            })
              .then(() => {
                document.location.href = '/users/profile';
              })
              .catch((error) => {
                setModalTextAndShow('오류 발생. 다시 시도해주세요.');
                console.log(error);
              });
          })
          .catch((error) => {
            const status = error.response.request.status;
            if (status === 400) {
              setModalTextAndShow('입력 필드 중 하나 이상이 누락되었습니다.');
            } else if (status === 401) {
              setModalTextAndShow('올바른 형식의 이메일을 입력하세요.');
            } else if (status === 409) {
              setModalTextAndShow('이미 사용중인 닉네임입니다.');
            } else if (status === 411) {
              setModalTextAndShow('비속어 닉네임 사용.');
            } else {
              setModalTextAndShow('회원가입 중 오류가 발생했습니다.');
            }
          });
      }

      function openDeleteModal() {
        $('#confirmDeleteModal').modal('show');
      }

      function confirmDelete() {
        const deletePassword = document.getElementById('deletePassword').value;

        axios({
          method: 'POST',
          url: '/users/checkpassword',
          data: {
            password: deletePassword,
          },
        })
          .then((result) => {
            if (result.data.success) {
              axios({
                method: 'DELETE',
                url: '/users/deleteprofile',
              })
                .then((deleteResult) => {
                  alert('회원 탈퇴가 완료되었습니다.');
                  document.location.href = '/';
                })
                .catch((deleteError) => {
                  console.error(deleteError);
                });
            } else {
              const errorMessage =
                '비밀번호가 일치하지 않습니다. 다시 시도해주세요.';
              const errorMessageElement =
                document.getElementById('pwModalMessage');
              errorMessageElement.textContent = errorMessage;
              errorMessageElement.style.display = 'block';
              $('#deletePassword').val(''); 
            }
          })
          .catch((error) => {
            console.error(error);
            const status = error.response.request.status;
            if (status === 401) {
              const errorMessage =
                '비밀번호가 일치하지 않습니다. 다시 시도해주세요.';
              const errorMessageElement =
                document.getElementById('pwModalMessage');
              errorMessageElement.textContent = errorMessage;
              errorMessageElement.style.display = 'block';
              $('#deletePassword').val('');
            } else {
              alert('서버 오류 발생');
              window.document.href = '/';
            }
          });
      }

      function setModalTextAndShow(message) {
        $('#cautionText').text(message);
        $('#cautionModal').modal('show');
      }

      function resetFormInputs() {
        const form_profile = document.forms['form_profile'];
        form_profile.uName.value = '';
        form_profile.email.value = '';
        form_profile.pw.value = '';
        form_profile.pw_check.value = '';
      }
      function goBack() {
        window.history.back();
      }
    </script>
  </body>
</html>
